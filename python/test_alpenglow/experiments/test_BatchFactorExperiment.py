import alpenglow as prs
import alpenglow.Getter as rs
import alpenglow.experiments
import pandas as pd
import math


class TestBatchFactorExperiment:
    def test_batchFactorExperiment(self):
        data = pd.read_csv(
            "python/test_alpenglow/test_data_41",
            sep=' ',
            header=None,
            names=['time', 'user', 'item', 'id', 'score', 'eval']
        )
        sbExperiment = alpenglow.experiments.BatchFactorExperiment(
            top_k=100,
            negative_rate=3,
            seed=254938879,
            period_length=1000
        )
        rankings = sbExperiment.run(data, verbose=True)
        assert rankings.top_k == 100
        desired_ranks
        ranking_list = list(rankings["rank"].fillna(101))
        i = 0
        cum_dcg = 0
        local_cum_dcg = 0
        for rank in ranking_list:
          i+=1
          dcg = 1.0/math.log(rank+1,2)
          cum_dcg+=dcg
          local_cum_dcg+=dcg
          if i%100==0:
            print(str(cum_dcg/i)+" "+str(local_cum_dcg/100))
            local_cum_dcg=0

        print("output="+str(list(rankings["rank"].fillna(101))))
        assert list(rankings["rank"].fillna(101)) == desired_ranks
        assert 1==2

    def test_batchFactorExperiment_timeframe(self):
        data = pd.read_csv(
            "python/test_alpenglow/test_data_41",
            sep=' ',
            header=None,
            names=['time', 'user', 'item', 'id', 'score', 'eval']
        )
        sbExperiment = alpenglow.experiments.BatchFactorExperiment(
            top_k=100,
            negative_rate=3,
            seed=254938879,
            period_length=1000,
            timeframe_length=2000
        )
        rankings = sbExperiment.run(data, verbose=True)
        assert rankings.top_k == 100
        desired_ranks
        ranking_list = list(rankings["rank"].fillna(101))
        i = 0
        cum_dcg = 0
        local_cum_dcg = 0
        for rank in ranking_list:
          i+=1
          dcg = 1.0/math.log(rank+1,2)
          cum_dcg+=dcg
          local_cum_dcg+=dcg
          if i%100==0:
            print(str(cum_dcg/i)+" "+str(local_cum_dcg/100))
            local_cum_dcg=0

        print("output="+str(list(rankings["rank"].fillna(101))))
        assert list(rankings["rank"].fillna(101)) == desired_ranks
        assert 1==2
